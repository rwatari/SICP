; Exercise 3.23 Deques
#|
Deque representation is pair with first pointer to front of sequence and 
second pointer to rear of sequence. 

Sequence is pairs with car pointing to a pair containing the item and a pointer
to the previous pair in the sequence

[|][|]
 V  \ - - - V 
[|][-]---->[|][/]
 V  ^----   V
[a][?]  |  [b][|]
        \------/
|#


;;; Constructor
(define (make-deque) (cons '() '()))

;;; Predicate
(define (empty-deque? deque)
  (eq? (front-ptr deque) '()))

;;; Selectors
(define (front-ptr deque)
  (car deque))

(define (rear-ptr deque)
  (cdr deque))
       
(define (front-deque deque))

(define (rear-deque deque))

;;; Mutators
(define (front-insert-deque! deque symbol))

(define (rear-insert-deque! deque symbol))

(define (front-delete-deque! deque))

(define (rear-delete-deque! deque))